---
- name: ensure dependencies available through apt are installed
  apt: 
    pkg: "{{ item }}" 
    state: latest 
    update_cache: yes 
    cache_valid_time: 600
  with_items:
    - curl
    - git-core
    - libxml2-utils
    - nginx
    - openssl
    - php-net-ldap2
    - php5-cli
    - php5-curl
    - php5-fpm
    - php5-gd
    - php5-json
    - php5-mcrypt
    - php5-mysql
    - tidy

- name: ensure that mcrypt module is enabled
  command: php5enmod mcrypt creates=/etc/php5/fpm/conf.d/20-mcrypt.ini
  notify:
    - restart php5-fpm

- name: ensure that ttrss user exists in ldap
  ldap:
    bind_dn: cn=admin,{{ ldap_auth_base_dn }}
    bind_password: "{{ ldap_auth_admin_password }}"
    entry_dn: uid=ttrss,ou=services,{{ ldap_auth_base_dn }}
    attributes:
      - objectClass: account
      - objectClass: simpleSecurityObject
      - uid: ttrss
      - userPassword: "{{ ttrss_ldap_password|ssha_password_hash(ttrss_ldap_password_salt) }}"
    modify_action: replace
    state: present
  when: ttrss_enable_ldap

- name: ensure that ttrss group exists
  group:
    name: ttrss
    state: present

- name: ensure that ttrss user exits
  user:
    name: ttrss
    group: ttrss
    home: /srv/ttrss
    createhome: yes
    shell: /bin/bash
    state: present

- name: ensure /var/cache/ansible directory exists
  file:
    path: /var/cache/ansible
    owner: root
    group: root
    mode: 0755
    state: directory

- name: download the ttrss install package
  get_url:
    url: "{{ ttrss_download_url }}"
    dest: /var/cache/ansible/ttrss.tar.gz

- name: unarchive ttrss to /srv/ttrss
  command: sudo -u ttrss tar --strip-components 1 -xvzf /var/cache/ansible/ttrss.tar.gz
           chdir=/srv/ttrss
           creates=/srv/ttrss/index.php

- name: ensure ttrss database is present
  mysql_db:
    name: ttrss
    state: present

- name: ensure ttrss database user is present
  mysql_user:
    name: ttrss
    host: "{{ item }}"
    password: "{{ ttrss_ttrss_mysql_password }}"
    priv: ttrss.*:ALL
    state: present
  with_items:
    - "%"
    - localhost

- name: copy .my.cnf file with ttrss password credentials
  template:
    src: srv/ttrss/.my.cnf
    dest: /srv/ttrss/.my.cnf
    owner: ttrss
    group: ttrss
    mode: 0600

- name: initialize ttrss database
  sudo_user: ttrss
  shell: mysql -u ttrss -p"{{ ttrss_ttrss_mysql_password }}" ttrss < /srv/ttrss/schema/ttrss_schema_mysql.sql
         && touch /srv/ttrss/.mysql_schema
         creates=/srv/ttrss/.mysql_schema

- name: update /srv/ttrss/schema/admin_user_info.sql from template
  template:
    src: srv/ttrss/schema/admin_user_info.sql
    dest: /srv/ttrss/schema/admin_user_info.sql
    owner: ttrss
    group: ttrss
    mode: 0600
  register: update_admin_info

- name: update ttrss admin user info
  sudo_user: ttrss
  shell: mysql -u ttrss -p"{{ ttrss_ttrss_mysql_password }}" ttrss < /srv/ttrss/schema/admin_user_info.sql
  when: update_admin_info|changed

- name: check out contrib plugins from github
  sudo_user: ttrss
  git:
    repo: https://github.com/gothfox/Tiny-Tiny-RSS-Contrib.git
    dest: /srv/ttrss/contrib
    update: yes
    accept_hostkey: yes

- name: create links to selected contrib plugins
  file:
    path: /srv/ttrss/plugins/{{ item }}
    src: /srv/ttrss/contrib/plugins/{{ item }}
    owner: ttrss
    group: ttrss
    state: link
  with_items: ttrss_contrib_plugins
    
- name: ensure that external plugin directory exists
  file:
    path: /srv/ttrss/external
    state: directory
    owner: ttrss
    group: ttrss
    mode: 0755

- name: check out external plugin repositories
  sudo_user: ttrss
  git:
    repo: "{{ item.repo }}"
    dest: /srv/ttrss/external/{{ item.name }}
    update: yes
  with_items: ttrss_gitrepo_plugins

- name: create links to external plugins
  file:
    path: /srv/ttrss/plugins/{{ item.name }}
    src: /srv/ttrss/external/{{ item.name }}/{{ item.subdir }}
    owner: ttrss
    group: ttrss
    state: link
  with_items: ttrss_gitrepo_plugins

- name: check out external theme repositories
  sudo_user: ttrss
  git:
    repo: "{{ item.repo }}"
    dest: /srv/ttrss/themes/{{ item.name }}
    update: yes
  with_items: ttrss_gitrepo_themes

- name: create links to external theme css files
  file:
    path: /srv/ttrss/themes/{{ item.name }}.css
    src: /srv/ttrss/themes/{{ item.name }}/{{ item.name }}.css
    owner: ttrss
    group: ttrss
    state: link
  with_items: ttrss_gitrepo_themes

- name: update /srv/ttrss/config.php from template
  template:
    src: srv/ttrss/config.php
    dest: /srv/ttrss/config.php
    owner: ttrss
    group: ttrss
    mode: 0600

- name: update /etc/init/ttrss-update-daemon.conf from template
  template:
    src: etc/init/ttrss-update-daemon.conf
    dest: /etc/init/ttrss-update-daemon.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - restart ttrss-update-daemon

- name: update /etc/php5/fpm/pool.d/ttrss.conf from template
  template:
    src: etc/php5/fpm/pool.d/ttrss.conf
    dest: /etc/php5/fpm/pool.d/ttrss.conf 
    owner: root
    group: root
    mode: 0644
  notify:
    - restart php5-fpm

- name: create self-signed key/certificate pair if required
  shell: >
          openssl req -newkey rsa:2048 -x509 -nodes
          -days 365 -subj "/CN={{ ttrss_hostname }}"
          -out {{ ttrss_ssl_cert_file }}
          -keyout {{ ttrss_ssl_key_file }} &&
          update-ca-certificates
          creates={{ ttrss_ssl_cert_file }}

- name: update /etc/nginx/sites-available/ttrss from template
  template:
    src: etc/nginx/sites-available/ttrss
    dest: /etc/nginx/sites-available/ttrss
    owner: root
    group: root
    mode: 0644
  notify:
    - restart nginx

- name: ensure /etc/nginx/sites-enabled/ttrss exists and links to ../sites-available/ttrss
  file:
    path: /etc/nginx/sites-enabled/ttrss
    src: ../sites-available/ttrss
    force: yes
    state: link
  notify:
    - restart nginx

- name: ensure that there is not a hostname collision with the nginx default host
  lineinfile:
    dest: /etc/nginx/sites-available/default
    regexp: '^(\s+)(server_name {{ ttrss_hostname }};.*)$'
    backrefs: yes
    line: '\1#\2'
    state: present
  notify:
    - restart nginx

- name: ensure ttrss services are started and enabled
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - nginx
    - php5-fpm
    - ttrss-update-daemon

